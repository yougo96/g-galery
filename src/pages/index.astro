---
import Layout from '../layouts/Layout.astro';

import Card from '../components/Card.astro';
import AlbumCard from '../components/AlbumCard.astro';
import MediaItems from '../components/MediaItems.astro';

const response = await fetch(`https://photoslibrary.googleapis.com/v1/albums`, {
	method: 'GET',
	headers: {
		'Content-Type': 'application/json',
		Authorization: `Bearer ${import.meta.env.AccessToken}`,
	},
});
const datas = await response.json();
console.log(datas);
---

<Layout title="g-galery">
	<main style="grid-area: main;">

		<br>
		<span class="info">
			Display your <strong>Google photo</strong> with a fancy interface.
		</span>
		<br><br>

		<hr>
		<b>Recent images</b>
		<MediaItems />
		<hr>

		<div class="albums-container">
			{datas.albums.map(data => <AlbumCard data={data} /> )}
		</div>
		<br>
		<div class="albums-container">
			{datas.albums.map(data => <AlbumCard data={data} /> )}
		</div>
		
		<ul role="list" class="link-card-grid" style="display: none;">
			<Card
				href="https://docs.astro.build/"
				title="Documentation"
				body="Learn how Astro works and explore the official API docs."
			/>
			<Card
				href="https://astro.build/integrations/"
				title="Integrations"
				body="Supercharge your project with new frameworks and libraries."
			/>
			<Card
				href="https://astro.build/themes/"
				title="Themes"
				body="Explore a galaxy of community-built starter themes."
			/>
			<Card
				href="https://astro.build/chat/"
				title="Community"
				body="Come say hi to our amazing Discord community. ❤️"
			/>
		</ul>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: unset;
		max-width: 1240px;

		outline-width: 0px;
		border: solid 1px var(--color-main);
		border-width: 0 2px;

		box-sizing: border-box;

		hr {
			margin: 0.5rem -1rem;
		}

		@media screen and (max-width: 1240px) {
			border: 0;
		}
	}
	.info {
		border: 1px solid #ffffff44;
		background: #ffffff11;
		padding: 1.5rem;
		border-radius: var(--border-radius);

		strong {
			color: var(--color-background);
			background-color: var(--color-main);
			padding: 0 0.15rem;
		}
	}

	.albums-container {
		display: grid;
		grid-template-columns: repeat(1, 1fr);
		gap: 1rem;
		padding: 0;
	}

	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
